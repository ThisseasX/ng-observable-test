{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/data.service.ts","./src/app/one/one.component.ts","./src/app/one/one.component.html","./src/app/two/two.component.ts","./src/app/two/two.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {}\n","<div>\n  <app-one></app-one>\n  <app-two></app-two>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { OneComponent } from './one/one.component';\nimport { TwoComponent } from './two/two.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OneComponent,\n    TwoComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataService {\n  serviceSubject: BehaviorSubject<string[]> = new BehaviorSubject(['Item 1']);\n}\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-one',\n  templateUrl: './one.component.html',\n  styles: [\n    `\n      div {\n        border: 1px solid black;\n        width: fit-content;\n        padding: 16px;\n        margin-bottom: 16px;\n      }\n    `,\n  ],\n})\nexport class OneComponent implements OnInit {\n  componentData = [];\n\n  constructor(private service: DataService) {}\n\n  subscribe() {\n    this.service.serviceSubject.subscribe((serviceData) => {\n      this.componentData = serviceData;\n    });\n  }\n\n  ngOnInit(): void {\n    this.subscribe();\n  }\n\n  updateData(newData: string) {\n    this.service.serviceSubject.next([...this.componentData, newData]);\n  }\n}\n","<div>\n  <input #input />\n  <button (click)=\"updateData(input.value); input.value = ''\">Add</button>\n\n  <ul *ngFor=\"let entry of componentData\">\n    <li>{{ entry }}</li>\n  </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-two',\n  templateUrl: './two.component.html',\n  styles: [\n    `\n      div {\n        border: 1px solid black;\n        width: fit-content;\n        padding: 16px;\n      }\n    `,\n  ],\n})\nexport class TwoComponent implements OnInit {\n  componentData = [];\n\n  constructor(private service: DataService) {}\n\n  subscribe() {\n    this.service.serviceSubject.subscribe((serviceData) => {\n      this.componentData = serviceData;\n    });\n  }\n\n  ngOnInit(): void {\n    this.subscribe();\n  }\n\n  updateData(newData: string) {\n    this.service.serviceSubject.next([...this.componentData, newData]);\n  }\n}\n","<div>\n  <input #input />\n  <button (click)=\"updateData(input.value); input.value = ''\">Add</button>\n\n  <ul *ngFor=\"let entry of componentData\">\n    <li>{{ entry }}</li>\n  </ul>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}